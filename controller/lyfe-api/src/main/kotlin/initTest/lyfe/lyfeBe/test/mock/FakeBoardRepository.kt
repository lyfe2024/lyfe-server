package initTest.lyfe.lyfeBe.test.mock

import lyfe.lyfeBe.board.Board
import lyfe.lyfeBe.board.out.BoardPort
import org.springframework.data.domain.PageRequest
import java.util.*
import java.util.concurrent.atomic.AtomicLong

class FakeBoardRepository : BoardPort {

    private val autoGeneratedId = AtomicLong(0)
    private val data: MutableList<Board> = Collections.synchronizedList(ArrayList())

    override fun findById(id: Long) = data.find { it.id == id }!!

    override fun create(board: Board): Board {
        val newBoard = board.copy(id = autoGeneratedId.incrementAndGet())
        data.add(newBoard)
        return newBoard
    }

    override fun update(board: Board): Board {
        val index = data.indexOfFirst { it.id == board.id }
        if (index != -1) {
            data[index] = board
        }
        return board
    }

    override fun findAll(boardId: Long, size: Int): List<Board> {
        return data.subList(
            boardId.toInt(),
                (boardId + size).coerceAtMost(data.size.toLong()).toInt()
        )
    }

}
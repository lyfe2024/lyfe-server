package initTest.lyfe.lyfeBe.test.mock

import lyfe.lyfeBe.board.Board
import lyfe.lyfeBe.topic.Topic
import lyfe.lyfeBe.topic.port.TopicPort
import lyfe.lyfeBe.user.User
import lyfe.lyfeBe.user.port.out.UserPort
import java.util.*
import java.util.concurrent.atomic.AtomicLong

class FakeTopicRepository : TopicPort {
    private val autoGeneratedId = AtomicLong(0)
    private val data: MutableList<Topic> = Collections.synchronizedList(ArrayList())

    override fun create(topic: Topic): Topic {
        return if (topic.id == 0L) {
            val newTopic = topic.copy(id = autoGeneratedId.incrementAndGet())
            data.add(newTopic)
            newTopic
        } else {
            data.removeIf { it.id == topic.id }
            data.add(topic)
            topic
        }
    }

    override fun getById(topicId: Long) = data.find { it.id == topicId }!!

    override fun update(from: Topic) {
        data.removeIf { it.id == from.id }
        data.add(from)
    }

    fun clear() {
        data.clear()
    }
}

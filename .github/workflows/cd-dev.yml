name: DEV) Push Docker Image And Deploy to EC2

on:
  pull_request:
    types: [closed]
    branches:
      - master
      - develop

permissions:
  contents: read

jobs:
  build:
    if: github.event.pull_request.merged == true && (github.base_ref == 'master' || github.base_ref == 'develop')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Set up yml ec2-dev file
        env:
          YAML_SECRET: ${{ secrets.YAML_EC2_DEV }}
          YAML_DIR: controller/lyfe-api/src/main/resources/config
          YAML_FILE_NAME: application-ec2-dev.yml
        run: |
          echo $YAML_SECRET | base64 --decode > $YAML_DIR/$YAML_FILE_NAME
          echo "YAML_SECRET has been decoded and saved to $YAML_DIR/$YAML_FILE_NAME"

      - name: Set up yml ec2-prod file
        env:
          YAML_SECRET: ${{ secrets.YAML_EC2_PROD }}
          YAML_DIR: controller/lyfe-api/src/main/resources/config
          YAML_FILE_NAME: application-ec2-prod.yml
        run: |
          echo $YAML_SECRET | base64 --decode > $YAML_DIR/$YAML_FILE_NAME
          echo "YAML_SECRET has been decoded and saved to $YAML_DIR/$YAML_FILE_NAME"

      - name: Set up yml secret file
        env:
          YAML_SECRET: ${{ secrets.YAML_SECRET }}
          YAML_DIR: controller/lyfe-api/src/main/resources/config
          YAML_FILE_NAME: application-secret.yml
        run: |
          echo $YAML_SECRET | base64 --decode > $YAML_DIR/$YAML_FILE_NAME
          echo "YAML_SECRET has been decoded and saved to $YAML_DIR/$YAML_FILE_NAME"

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get Short SHA
        id: short_sha
        run: |
          echo "::set-output name=sha_short::$(echo ${{ github.sha }} | head -c 7)"
          echo "Short SHA: ${{ steps.short_sha.outputs.sha_short }}"

      - name: Print branch & tag information
        run: |
          echo "Current branch: ${{ github.event.inputs.branch }}"
          echo "Current tag: ${{ steps.short_sha.outputs.sha_short }}"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew controller:lyfe-api:bootJar

      - name: Docker Login and Push
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          DOCKER_IMAGE_TAG: lyfe-server:${{ steps.short_sha.outputs.sha_short }}
        run: |
          echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
          docker build -t $DOCKER_IMAGE_TAG .
          docker tag $DOCKER_IMAGE_TAG $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_TAG
          docker push $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_TAG

  deploy-to-develop:
    if: github.event.pull_request.merged == true && github.base_ref == 'develop'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Get Short SHA
        id: short_sha
        run: |
            echo "::set-output name=sha_short::$(echo ${{ github.sha }} | head -c 7)"
            echo "Short SHA: ${{ steps.short_sha.outputs.sha_short }}"

      - name: Deploy to EC2 (Develop)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_DEV_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/lyfe-server:${{ steps.short_sha.outputs.sha_short }}
            docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/lyfe-server:${{ steps.short_sha.outputs.sha_short }} lyfe-server-develop
            docker rm -f $(docker ps -qa --filter name=lyfe-server-develop)
            docker run -d --name lyfe-server-develop -e TZ=Asia/Seoul -e SPRING_PROFILES_ACTIVE=ec2-dev,secret -p 80:8081 ${{ secrets.DOCKER_HUB_USERNAME }}/lyfe-server:${{ steps.short_sha.outputs.sha_short }}

  deploy-to-master:
    if: github.event.pull_request.merged == true && github.base_ref == 'master'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 (Master)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_MASTER_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/lyfe-server:${{ steps.short_sha.outputs.sha_short }}
            docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/lyfe-server:${{ steps.short_sha.outputs.sha_short }} lyfe-server-master
            docker rm -f $(docker ps -qa --filter name=lyfe-server-master)
            docker run -d --name lyfe-server-master -e TZ=Asia/Seoul -e SPRING_PROFILES_ACTIVE=ec2-prod,secret -p 80:8082 ${{ secrets.DOCKER_HUB_USERNAME }}/lyfe-server:${{ steps.short_sha.outputs.sha_short }}